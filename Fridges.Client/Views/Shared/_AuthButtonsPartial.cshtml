@using System.IdentityModel.Tokens.Jwt;
@using System.Security.Claims;

<ul class="navbar-nav">
    @{
        var jwtToken = Context.Session.GetString("jwtToken");
        if (String.IsNullOrEmpty(jwtToken))
        {
            <a class="nav-link text-dark" asp-controller="Auth" asp-action="Login">Sign in</a>
        }
        else
        {
            <a class="nav-link text-dark" asp-controller="Auth" asp-action="LogOut">Sign out</a>

            var jwtHandler = new JwtSecurityTokenHandler();
            var tokenContent = jwtHandler.ReadToken(jwtToken) as JwtSecurityToken;
            var claims = tokenContent.Claims.Where(claim => claim.Type == ClaimTypes.Role);
            var roles = claims.Select(claim => claim.Value);

            if (roles.Contains("Admin"))
            {
                <a class="nav-link text-dark" asp-controller="Auth" asp-action="GiveRoles">Give roles</a>
            }
            if (roles.Contains("Fridge-maker"))
            {
                <a class="nav-link text-dark" asp-controller="FridgeModel" asp-action="GetAllFridgeModels">Edit Fridge models</a>
            }
            if (roles.Contains("Product-maker"))
            {
                <a class="nav-link text-dark" asp-controller="Product" asp-action="GetAllProducts">Edit Products</a>
            }
        }
    }
</ul>