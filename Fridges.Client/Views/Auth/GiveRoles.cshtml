@using Fridges.Client.Models.DTOs;

@model GiveRoleDto
@{
    ViewData["Title"] = "Give roles";
}

<div id="give-roles">

    <div class="row">
        <div class="col-md-12">
            <form asp-action="@ViewBag.Action" method="post" onsubmit="return jQueryAjaxPost(this);">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="d-flex align-items-center w-25">
                    <div>
                        <span asp-validation-for="Username" class="text-danger"></span>
                        <input id="input-username" asp-for="Username" type="hidden" />
                        <div id="dropdown" class="dropdown">
                            <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton-username" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                @try
                                {
                                    if (Model.Username == null)
                                    {
                                        <span>Select Username</span>
                                    }
                                    else
                                    {
                                        <span>@Model.Username</span>
                                    }
                                }
                                catch
                                {
                                    <span>Select Username</span>
                                }
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton-username">
                                @foreach (var user in ViewBag.Users)
                                {
                                    <li><a class="dropdown-item py-2 li-username" item-value="@user.Username">@user.Username</a></li>
                                }
                            </ul>
                        </div>
                    </div>

                    <div class="w-25"></div>

                    <div>
                        <span asp-validation-for="RoleName" class="text-danger"></span>
                        <input id="input-role" asp-for="RoleName" type="hidden" />
                        <div id="dropdown" class="dropdown">
                            <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton-role" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                @try
                                {
                                    if (Model.RoleName == null)
                                    {
                                        <span>Select Role</span>
                                    }
                                    else
                                    {
                                        <span>@Model.RoleName</span>
                                    }
                                }
                                catch
                                {
                                    <span>Select Role</span>
                                }
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton-role">
                                @foreach (var role in ViewBag.Roles)
                                {
                                    <li><a class="dropdown-item py-2 li-role" item-value="@role.Title">@role.Title</a></li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>

                <div class="form-group mt-3">
                    <input type="submit" value="Add" class="btn btn-primary float-start" />
                </div>
            </form>
        </div>
    </div>

    <table class="table mt-3">
        <thead>
            <tr>
                <th scope="col">Username</th>
                <th scope="col">Product-maker</th>
                <th scope="col">Fridge-maker</th>
                <th scope="col">Admin</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in ViewBag.Users)
            {
                <tr>
                    <th scope="row">@user.Username</th>
                    @{
                        List<string> roles = new List<string>();
                        foreach (var role in user.Roles)
                        {
                            roles.Add(role.Title);
                        }
                    }

                    @(roles.Contains("Product-maker") ?
                        Html.Raw("<td><i class=\"fa fa-check\" style=\"color:green\"></i></td>") :
                        Html.Raw("<td></td>"))

                    @(roles.Contains("Fridge-maker") ?
                        Html.Raw("<td><i class=\"fa fa-check\" style=\"color:green\"></i></td>") :
                        Html.Raw("<td></td>"))

                    @(roles.Contains("Admin") ?
                        Html.Raw("<td><i class=\"fa fa-check\" style=\"color:green\"></i></td>") :
                        Html.Raw("<td></td>"))

                </tr>
            }
        </tbody>
    </table>


    <script>
        var usernameInput = document.getElementById("input-username");
        var dropdownButtonUsername = document.getElementById("dropdownMenuButton-username");
        var dropdownItemsUsername = document.querySelectorAll('.li-username');

        dropdownItemsUsername.forEach(item => {
            item.addEventListener('click', () => {
                const selectedItemName = item.innerHTML;
                const selectedItem = item.getAttribute('item-value');

                usernameInput.value = selectedItem;
                dropdownButtonUsername.innerText = selectedItemName;
            });
        });

        var roleInput = document.getElementById("input-role");
        var dropdownButtonRole = document.getElementById("dropdownMenuButton-role");
        var dropdownItemsRole = document.querySelectorAll('.li-role');

        dropdownItemsRole.forEach(item => {
            item.addEventListener('click', () => {
                const selectedItemName = item.innerHTML;
                const selectedItem = item.getAttribute('item-value');

                roleInput.value = selectedItem;
                dropdownButtonRole.innerText = selectedItemName;
            });
        });

    </script>

</div>